services:
  database:
    image: postgres:16.1-alpine3.18
    container_name: pg-docker
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-module1}
    ports:
      - "${DB_PORT:-5432}:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-postgres} -d ${DB_NAME:-module1}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  shop-core-service:
    image: geizerde/shop-core:v1.2.0
    container_name: shop-core-app
    restart: always
    depends_on:
      database:
        condition: service_healthy
    ports:
      - "${SHOP_CORE_PORT:-8080}:8080"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: ${CPUS_LIMIT:-1}
          memory: ${MEMORY_LIMIT:-500M}
    environment:
      DDL_AUTO: ${DDL_AUTO:-validate}
      SHOW_SQL: ${SHOW_SQL:-true}
      FLYWAY_ENABLED: ${FLYWAY_ENABLED:-true}
      FLYWAY_BASELINE: ${FLYWAY_BASELINE:-true}
      DB_HOST: ${DB_HOST:-database}
      DB_PORT: ${DB_PORT:-5432}
      DB_NAME: ${DB_NAME:-module1}
      DB_USERNAME: ${DB_USERNAME:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_DIALECT: ${DB_DIALECT:-org.hibernate.dialect.PostgreSQLDialect}
      TOMCAT_THREADS: ${TOMCAT_THREADS:-200}
      APP_HOST: ${SHOP_CORE_HOST:-0.0.0.0}
      APP_PORT: ${SHOP_CORE_PORT:-8080}
      TOTAL_COST_OF_ORDER_SERVICE_HOST: ${TOTAL_COST_OF_ORDER_SERVICE_HOST:-shop-total-cost-of-order-service}
      TOTAL_COST_OF_ORDER_SERVICE_PORT: ${TOTAL_COST_OF_ORDER_SERVICE_PORT:-8081}
      KAFKA_HOSTS: ${KAFKA_HOSTS:-hl22.zil:9094,hl23.zil:9094}
      KAFKA_GROUP_ID: ${KAFKA_GROUP_ID:-abeschastnov-consumer-group}
      KAFKA_TOPIC: ${KAFKA_TOPIC:-var01}
      KAFKA_CONCURRENCY: ${KAFKA_CONCURRENCY:-2}

  shop-total-cost-of-order-service:
    image: geizerde/shop-total-cost-of-order:v1.3.0
    container_name: shop-total-cost-app
    restart: always
    depends_on:
      - shop-core-service
    ports:
      - "${SHOP_TOTAL_COST_PORT:-8081}:${SHOP_TOTAL_COST_PORT:-8081}"
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: ${CPUS_LIMIT:-1}
          memory: ${MEMORY_LIMIT:-500M}
    environment:
      TOMCAT_THREADS: ${TOMCAT_THREADS:-200}
      APP_HOST: ${SHOP_TOTAL_COST_HOST:-0.0.0.0}
      APP_PORT: ${SHOP_TOTAL_COST_PORT:-8081}
      CORE_SERVICE_HOST: ${CORE_SERVICE_HOST:-shop-core-service}
      CORE_SERVICE_PORT: ${CORE_SERVICE_PORT:-8080}
      CORE_SERVICE_TIMEOUT: ${CORE_SERVICE_TIMEOUT:-60000}

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - app-network
    depends_on:
      database:
        condition: service_healthy

networks:
  app-network:
    driver: bridge





